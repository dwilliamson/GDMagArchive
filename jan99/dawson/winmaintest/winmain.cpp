// Disable warnings generated by the Windows header files.
#pragma warning(disable : 4514)
#pragma warning(disable : 4201)
#pragma warning(disable : 4100)
#include <windows.h>
#include "exceptionhandler.h"
#include <stdio.h>

// Copyright © 1998 Bruce Dawson.

int WINAPI HandledWinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance,
	LPTSTR lpCmdLine, int nCmdShow)
{
	int CrashCode = 0;	// Default crash type.
	sscanf(lpCmdLine, "%d", &CrashCode);

	char buffer[2000];
	sprintf(buffer,
			"Syntax: WinMainTest [0-4]\n"
			"\n"
			"The optional number selects which type of crash to do.\n"
			"This is useful for testing the exception handler.\n"
			"Look at errorlog.txt for post-mortem details.\n"
			"This program will now crash with crash type %d.\n", CrashCode);
	MessageBox(0,
			buffer,
			"Exception handler crash test",
			MB_OK);
	CrashTestFunction(CrashCode);
	return 0;
}

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance,
	LPTSTR lpCmdLine, int nCmdShow)
{
	int Result = -1;
	__try
	{
		Result = HandledWinMain(hInstance, hPrevInstance, lpCmdLine, nCmdShow);
	}
	__except(RecordExceptionInfo(GetExceptionInformation(), "main thread"))
	{
		// Do nothing here - RecordExceptionInfo() has already done
		// everything that is needed. Actually this code won't even
		// get called unless you return EXCEPTION_EXECUTE_HANDLER from
		// the __except clause.
	}
	return Result;
}
