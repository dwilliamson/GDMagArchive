Listing 1. Cubic environment map code under Direct3D. This shows some Direct3D (DirectX 7 or better) code that will allocate a cubic environment map.

// Assume pDD7 is a pointer to an IDirectDraw7 interface.
DDSURFACEDESC2 ddsd;
ZeroMemory((LPVOID)&ddsd, sizeof(DDSURFACEDESC2));
ddsd.dwSize = sizeof(DDSURFACEDESC2);
ddsd.dwFlags = DDSD_CAPS | DDSD_WIDTH | DDSD_HEIGHT | DDSD_PIXELFORMAT;
ddsd.ddsCaps.dwCaps = DDSCAPS_TEXTURE;

// Set the pixel format to a valid texture format here.

// Dimensions must be the same and must be a power-of-two.
ddsd.dwWidth  = ddsd.dwHeight = 128; 

// Set caps for a system memory cube-map texture that is a valid render target surface.
// We set the DDSCAPS_3DDEVICE bit only if we want to use the environment map as a render
// target. If you're going to just load textures, you don't need this flag set.
ddsd.ddsCaps.dwCaps = DDSCAPS_COMPLEX | DDSCAPS_3DDEVICE | DDSCAPS_TEXTURE;

// Here's where we state that it's a cubic environment map and that we want all 6 faces
// created at once.

ddsd.ddsCaps.dwCaps2 = DDSCAPS2_CUBEMAP | DDSCAPS2_CUBEMAP_ALLFACES;
LPDIRECTDRAWSURFACE7 pddsCubeMap;

// And here's where we create the cube map complex surface.
if( FAILED( pDD7->CreateSurface( &ddsd, pddsCubeMap, NULL ) ) )
{
   // something bad happened.
}

